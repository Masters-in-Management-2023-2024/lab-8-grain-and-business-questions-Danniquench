# -*- coding: utf-8 -*-
"""lab_exercise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/Masters-in-Management-2023-2024/lab-8-grain-and-business-questions-Danniquench/blob/main/lab_exercise.ipynb

# Diamond Company Analytics Challenge

**Time:** 35 minutes

**Scenario:** You are the new data analyst at a prestigious diamond company. The CEO has called an urgent meeting and needs answers to critical business questions about the inventory.

**Your Mission:** Analyze the diamond inventory data and provide insights to guide strategic decisions.
"""

import polars as pl

# Load the diamonds dataset
print("Loading diamonds dataset...")
try:
  df = pl.read_csv('https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/diamond.csv')
  print("Dataset loaded successfully!")
except Exception as e:
  print(f"Error loading dataset: {e}")

"""## Section 1: Initial Inventory Assessment (5 minutes)

The CEO walks in: "Before we dive into specifics, I need to understand what we're working with. Give me the basics about our inventory database."

### Question 1: "How extensive is our inventory database?"

The CEO needs to know the scale of data you're analyzing.
"""

# Your code here:
total_rows = df.height
total_columns = df.width
memory_usage_mb = df.estimated_size() / (1024 * 1024)
print(f"Our inventory database contains {total_rows:,} records "
      f"across {total_columns} attributes, "
      f"occupying approximately {memory_usage_mb:.2f} MB of data.")

"""### Question 2: "What information do we track about each diamond?"

List all the characteristics we record.
"""

# Your code here:
characteristics = df.columns

print("We track the following characteristics for each diamond:")
for col in characteristics:
    print(f"- {col}")

"""### Question 3: "When I look at one line in this database, what am I looking at?"

Explain in business terms:

**Your answer:** Each row represents:one individual diamond in the inventory, with all of its recorded characteristics such as carat weight, cut, color, clarity, depth, table, price, and dimensions (x, y, z)

## Section 2: Strategic Business Questions (20 minutes)

The CEO continues: "Now let's get to the important questions. Our board meeting is tomorrow and I need concrete numbers."

### Question 4: "We're considering expanding our storage facilities. How many total carats do we have in inventory? I need to know if our vaults can handle the weight."

Think about what measurement would help answer this.
"""

# Your code here:
total_carats = df['Carat Weight'].sum()

print(f"Our total inventory weighs {total_carats:,.2f} carats in diamonds.")

"""### Question 5: "Our new marketing campaign claims we have 'the widest variety of cuts in the industry.' Can you verify this?"

The CEO wants to know about variety, not quantity.
"""

# Your code here:
distinct_cuts = df['Cut'].n_unique()

cut_types = df['Cut'].unique().to_list()

print(f"We offer {distinct_cuts} distinct diamond cuts in our inventory.")
print("The cuts we have are:")
for cut in cut_types:
    print(f"- {cut}")

"""### Question 6: "I'm meeting with our insurance company. They need to know our price exposure - what's our most and least valuable diamond?"
"""

# Your code here:
most_valuable = df.filter(pl.col("Price") == df["Price"].max())

least_valuable = df.filter(pl.col("Price") == df["Price"].min())

print("Most valuable diamond in inventory:")
print(most_valuable)
print("\nLeast valuable diamond in inventory:")
print(least_valuable)

"""### Question 7: "Which color grades should we focus on in our premium line? I need typical prices across our color spectrum."

The CEO wants to understand pricing patterns.
"""

# Your code here:
avg_price_by_color = (df.group_by("Color")
      .agg(pl.col("Price").mean().alias("avg_price"))
      .sort("avg_price", descending=True))

print("Average diamond price by color grade:")
print(avg_price_by_color)

"""**Reflection:** After analyzing by color, how has your view of the data changed? What does each row in your result represent now?

**Your answer:** New grain = one row per diamond color grade, showing the average price of all diamonds in that grade

## Section 3: Advanced Strategic Analysis (10 minutes)

The CEO leans forward: "These next questions will shape our strategy for next year."

### Question 8: "We're thinking of specializing in certain clarity grades. For our investor deck, I need a complete breakdown showing: how many diamonds we have in each clarity grade, their typical price, and the total carats we're holding for each grade."
"""

# Your code here:
clarity_breakdown = (
    df.group_by("Clarity")
      .agg([
          pl.count().alias("diamond_count"),
          pl.col("Price").mean().round(2).alias("avg_price"),
          pl.col("Carat Weight").sum().round(2).alias("total_carats")])
      .sort("avg_price", descending=True))

print("Clarity Grade Breakdown:")
print(clarity_breakdown)

"""### Question 9: "My luxury competitor claims they have the best prices for every cut-color combination. Show me our pricing structure across these combinations - I want to see where we're competitive."
"""

# Your code here:
pricing_by_cut_color = (
    df.group_by(["Cut", "Color"])
      .agg(pl.col("Price").mean().round(2).alias("avg_price"))
      .sort(["Cut", "Color"]))

print("Average price for each cut-color combination:")
print(pricing_by_cut_color)

"""**Reflection:** How specific is your analysis now? What level of detail does each row represent?

**Your answer:** New grain = one row per unique colorâ€“cut inventory segment, showing the total value of that segment and the number of diamonds it contains

### Question 10: URGENT - "Our biggest client is interested in purchasing entire inventory segments. They asked: 'Which color-cut combinations represent your highest total inventory value?' Show me the top 5 most valuable inventory segments by total worth, and include how many diamonds are in each segment."

This is critical for tomorrow's negotiation.
"""

# Your code here:
top_value_segments = (df.group_by(["Color", "Cut"])
      .agg([pl.col("Price").sum().alias("total_value"),pl.count().alias("diamond_count")])
      .sort("total_value", descending=True)
      .head(5))

print("Top 5 most valuable inventory segments:")
print(top_value_segments)

"""## Debrief

Congratulations! You've just completed your first day as the diamond company's data analyst.

Remember:
- CEOs speak in business language, not technical terms
- Always understand what each row represents before analyzing
- Business questions contain clues about which operations to use
"""